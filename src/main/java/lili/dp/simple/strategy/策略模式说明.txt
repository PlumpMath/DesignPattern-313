英文：
defines a family of algorithms, encapulates each one,
and makes them interchangeable,Strategy lets the algorithm
vary independently from clients that use it.

首先，我们来看下策略模式的概念。一般的解释如下：
   策略模式定义了一系列的算法，并将每一个算法封装起来，而且使它们还可以相互替换。策略模式让算法独立于使用它的客户而独立变化。（原文：The Strategy Pattern defines a family of algorithms,encapsulates each one,and makes them interchangeable. Strategy lets the algorithm vary independently from clients that use it.）

    一般的，策略模式主要分为以下三个角色：
    1． 环境角色（Context）:持有一个策略类引用
    2． 抽象策略（Strategy）:定义了多个具体策略的公共接口，具体策略类中各种不同的算法以不同的方式实现这个接口；
            Context使用这些接口调用不同实现的算法。一般的，我们使用接口或抽象类实现。
    3． 具体策略（ConcreteStrategy）:实现抽象策略类中的相关的算法或操作。

策略模式使用的OO原则有：
1、Encapsulate what varies
2、Favor composition over inheritance
3、Program to interfaces , not implementations.